{"ast":null,"code":"var _jsxFileName = \"/Users/ben/software/vega-web-master/src/auth/UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({\n  user: '',\n  setUserInfo: () => {},\n  logout: () => {}\n});\n\nconst UserProvider = (props, {\n  children\n}) => {\n  _s();\n\n  // User is the name of the \"data\" that gets stored in context\n  const [user, setUser] = useState({\n    username: '',\n    jwt: '',\n    role: ''\n  });\n  useEffect(() => {\n    console.log(props);\n    const username = props.user.username || window.localStorage.getItem(\"username\");\n    const jwt = props.user.jwt || window.localStorage.getItem(\"jwt\");\n    const role = props.user.role || window.localStorage.getItem(\"role\");\n\n    if (username && jwt) {\n      setUser({\n        username: username,\n        jwt: jwt,\n        role: role\n      });\n    }\n  }, []); // Login updates the user data with a name parameter\n\n  const setUserInfo = (name, jwt, role) => {\n    console.log(\"SetUserInfo called\");\n    setUser(user => ({\n      username: name,\n      jwt: jwt,\n      role: role\n    }));\n    console.log(user);\n    window.localStorage.setItem(\"username\", name);\n    window.localStorage.setItem(\"jwt\", jwt);\n    window.localStorage.setItem(\"role\", role);\n  }; // Get Logged in User info\n\n\n  const getUserInfo = () => {\n    return window.localStorage.getItem(\"jwt\");\n  }; // Logout updates the user data to default\n\n\n  const logout = () => {\n    setUser(user => ({\n      username: '',\n      jwt: '',\n      role: ''\n    }));\n    window.localStorage.setItem(\"username\", \"\");\n    window.localStorage.setItem(\"jwt\", \"\");\n    window.localStorage.setItem(\"role\", \"\");\n  };\n\n  console.log(\"Rendering context provider\");\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUserInfo,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n};\n\n_s(UserProvider, \"iaw1Dhl3NoTOc1HxX5rR0FRexYo=\");\n\n_c = UserProvider;\nexport { UserProvider, UserContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/ben/software/vega-web-master/src/auth/UserProvider.js"],"names":["React","createContext","useState","useEffect","UserContext","user","setUserInfo","logout","UserProvider","props","children","setUser","username","jwt","role","console","log","window","localStorage","getItem","name","setItem","getUserInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;;AACA,MAAMC,WAAW,gBAAGH,aAAa,CAAC;AAChCI,EAAAA,IAAI,EAAE,EAD0B;AAEhCC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFW;AAGhCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAHgB,CAAD,CAAjC;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAuB;AAAA;;AAC3C;AACE,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBT,QAAQ,CAAC;AAAEU,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,GAAG,EAAC,EAApB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAAD,CAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACbY,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,UAAMG,QAAQ,GAAIH,KAAK,CAACJ,IAAN,CAAWO,QAAX,IAAuBK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAzC;AACA,UAAMN,GAAG,GAAIJ,KAAK,CAACJ,IAAN,CAAWQ,GAAX,IAAkBI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAA/B;AACA,UAAML,IAAI,GAAIL,KAAK,CAACJ,IAAN,CAAWS,IAAX,IAAmBG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAjC;;AACA,QAAGP,QAAQ,IAAIC,GAAf,EAAmB;AACjBF,MAAAA,OAAO,CAAC;AACNC,QAAAA,QAAQ,EAAEA,QADJ;AAENC,QAAAA,GAAG,EAAEA,GAFC;AAGNC,QAAAA,IAAI,EAAEA;AAHA,OAAD,CAAP;AAKD;AACF,GAZO,EAYL,EAZK,CAAT,CAJyC,CAkBxC;;AACD,QAAMR,WAAW,GAAG,CAACc,IAAD,EAAOP,GAAP,EAAYC,IAAZ,KAAqB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACCL,IAAAA,OAAO,CAAEN,IAAD,KAAW;AACjBO,MAAAA,QAAQ,EAAEQ,IADO;AAEjBP,MAAAA,GAAG,EAAEA,GAFY;AAGfC,MAAAA,IAAI,EAAEA;AAHS,KAAX,CAAD,CAAP;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAY,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,UAA5B,EAAwCD,IAAxC;AACAH,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,KAA5B,EAAmCR,GAAnC;AACAI,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,MAA5B,EAAoCP,IAApC;AACF,GAXD,CAnByC,CA+BxC;;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,WAAOL,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAP;AACD,GAFD,CAhCwC,CAoCzC;;;AACA,QAAMZ,MAAM,GAAG,MAAM;AACnBI,IAAAA,OAAO,CAAEN,IAAD,KAAW;AAChBO,MAAAA,QAAQ,EAAE,EADM;AAEhBC,MAAAA,GAAG,EAAE,EAFW;AAGdC,MAAAA,IAAI,EAAE;AAHQ,KAAX,CAAD,CAAP;AAKCG,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,UAA5B,EAAwC,EAAxC;AACAJ,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,KAA5B,EAAkC,EAAlC;AACAJ,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,MAA5B,EAAmC,EAAnC;AACF,GATD;;AAUCN,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,sBAEI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBC,MAAAA;AAArB,KAA7B;AAAA,cACIG;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMA,CAtDD;;GAAMF,Y;;KAAAA,Y;AAwDN,SACEA,YADF,EAEEJ,WAFF","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nconst UserContext = createContext({\n  user :'',\n  setUserInfo: () => {},\n  logout: () => {}\n});\n\nconst UserProvider = (props, {children}) => {\n\t// User is the name of the \"data\" that gets stored in context\n  \tconst [user, setUser] = useState({ username: '', jwt:'' , role: ''});\n\n  \tuseEffect(() => {\n      console.log(props);\n      const username =  props.user.username || window.localStorage.getItem(\"username\");\n      const jwt =  props.user.jwt || window.localStorage.getItem(\"jwt\");\n      const role =  props.user.role || window.localStorage.getItem(\"role\");\n      if(username && jwt){\n        setUser({\n          username: username,\n          jwt: jwt,\n          role: role\n        })\n      }\n    }, [])\n\n    // Login updates the user data with a name parameter\n  \tconst setUserInfo = (name, jwt, role) => {\n    \tconsole.log(\"SetUserInfo called\");\n      setUser((user) => ({\n      \t\tusername: name,\n      \t\tjwt: jwt,\n          role: role\n    \t}));\n      console.log(user)\n      window.localStorage.setItem(\"username\", name);\n      window.localStorage.setItem(\"jwt\", jwt);\n      window.localStorage.setItem(\"role\", role);\n  \t};\n    // Get Logged in User info\n    const getUserInfo = () => {\n      return window.localStorage.getItem(\"jwt\");\n    }\n\n  \t// Logout updates the user data to default\n  \tconst logout = () => {\n    \tsetUser((user) => ({\n      \t\tusername: '',\n      \t\tjwt: '',\n          role: ''\n    \t}));\n      window.localStorage.setItem(\"username\", \"\");\n      window.localStorage.setItem(\"jwt\",\"\");\n      window.localStorage.setItem(\"role\",\"\");\n  \t};\n    console.log(\"Rendering context provider\");\n\treturn (\n\n    \t<UserContext.Provider value={{ user, setUserInfo, logout }}>\n      \t\t{children}\n    \t</UserContext.Provider>\n  \t);\n}\n\nexport {\n  UserProvider, \n  UserContext\n}"]},"metadata":{},"sourceType":"module"}