{"ast":null,"code":"var _jsxFileName = \"/Users/ben/software/vega-web-master/src/components/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport UserRegistrationPageLayout from '../templates/UserRegistrationPageLayout.js';\nimport LoginUser from '../UI/organisms/LoginUser.js';\nimport { login } from '../../service/auth/AuthenticationManager.js';\nimport { UserContext } from '../../auth/UserProvider.js';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const {\n    context\n  } = props;\n  const {\n    user,\n    setUserInfo,\n    logout\n  } = useContext(UserContext);\n  const [auth, setAuth] = useState(false);\n  console.log(\"Userinfo\", user);\n\n  function onSubmit(userInfo) {\n    login(userInfo).then(res => {\n      console.log(\"Response\", res);\n      console.log(res.jwt);\n      var role = res.authorities[0].authority;\n      setUserInfo(userInfo.username, res.jwt, role);\n      setAuth(true);\n    });\n  }\n\n  if (!auth) {\n    return /*#__PURE__*/_jsxDEV(UserRegistrationPageLayout, {\n      children: /*#__PURE__*/_jsxDEV(LoginUser, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(Login, \"4W7PEub3DuCbOoJLv1yUiO25vcA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ben/software/vega-web-master/src/components/pages/Login.js"],"names":["useState","useContext","UserRegistrationPageLayout","LoginUser","login","UserContext","Redirect","Login","props","context","user","setUserInfo","logout","auth","setAuth","console","log","onSubmit","userInfo","then","res","jwt","role","authorities","authority","username"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,OAAOC,0BAAP,MAAuC,4CAAvC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAAQC,KAAR,QAAoB,6CAApB;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAUC,QAAV,QAA0B,kBAA1B;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAmBC,IAAAA;AAAnB,MAA6BX,UAAU,CAACI,WAAD,CAA7C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,IAAxB;;AACA,WAASO,QAAT,CAAkBC,QAAlB,EAA2B;AAC1Bd,IAAAA,KAAK,CAACc,QAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAI;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,GAAxB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,GAAhB;AACA,UAAIC,IAAI,GAAGF,GAAG,CAACG,WAAJ,CAAgB,CAAhB,EAAmBC,SAA9B;AACAb,MAAAA,WAAW,CAACO,QAAQ,CAACO,QAAV,EAAoBL,GAAG,CAACC,GAAxB,EAA6BC,IAA7B,CAAX;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,KAPF;AAQA;;AAEA,MAAG,CAACD,IAAJ,EAAS;AACR,wBACC,QAAC,0BAAD;AAAA,6BACC,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA,GAND,MAMO;AACN,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;AACF,CA1BD;;GAAMV,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import {useState, useContext} from 'react';\nimport UserRegistrationPageLayout from '../templates/UserRegistrationPageLayout.js';\nimport LoginUser from '../UI/organisms/LoginUser.js';\nimport {login} from '../../service/auth/AuthenticationManager.js';\n\nimport {UserContext} from '../../auth/UserProvider.js';\nimport  { Redirect } from 'react-router-dom'\n\nconst Login = (props) => {\n\t\n\tconst { context } = props; \n\tconst {user, setUserInfo,logout} = useContext(UserContext);\n\tconst [auth, setAuth] = useState(false);\n\tconsole.log(\"Userinfo\", user);\n\tfunction onSubmit(userInfo){\n\t\tlogin(userInfo)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(\"Response\", res);\n\t\t\t\tconsole.log(res.jwt);\n\t\t\t\tvar role = res.authorities[0].authority;\n\t\t\t\tsetUserInfo(userInfo.username, res.jwt, role)\n\t\t\t\tsetAuth(true);\n\t\t\t})\n\t}\n\n\t\tif(!auth){\n\t\t\treturn (\n\t\t\t\t<UserRegistrationPageLayout>\n\t\t\t\t\t<LoginUser onSubmit={onSubmit}/>\n\t\t\t\t</UserRegistrationPageLayout>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Redirect to='/' />;\n\t\t}\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}